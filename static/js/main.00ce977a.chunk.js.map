{"version":3,"sources":["lib/images/logo.png","lib/images/x-icon.png","lib/images/o-icon.png","lib/images/trophy-icon.png","lib/constans/routePaths.js","lib/styles/variables.js","lib/styles/globalStyles.js","components/Logo/Logo.js","components/FormName/FormName.js","pages/Home/Home.js","components/Board/SingleBox/SingleBox.js","lib/constans/winnerPaths.js","lib/utils/checkWinner.js","components/Status/Status.js","components/WinnerTrophy/WinnerTrophy.js","components/Board/Board.js","pages/Game/Game.js","pages/routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","routePaths","home","game","boxShadow","GlobalStyle","createGlobalStyle","_templateObject","StyledImg","styled","img","Logo_templateObject","Logo","react_default","a","createElement","src","logo","alt","FormName","state","firstPlayer","secondPlayer","handleChange","event","target","name","value","_this","setState","Object","defineProperty","handleSubmit","_this$state","preventDefault","props","history","push","pathname","StyledFormContainer","components_Logo_Logo","StyledForm","onSubmit","this","StyledLabel","StyledInput","type","onChange","required","StyledButton","React","Component","div","FormName_templateObject","form","_templateObject2","label","_templateObject3","input","_templateObject4","button","_templateObject5","withRouter","Home","components_FormName_FormName","SingleBox_templateObject","xIcon","oIcon","SingleBox","handleOnClick","SingleBox_StyledButton","onClick","winnerPath","checkWinner","checked","handleIsWinner","i","winnerPaths","length","_winnerPaths$i","slicedToArray","b","c","includes","StyledStatus","Status_templateObject","Status","_ref","currentPlayer","playerName","isWinner","className","WinnerTrophy_templateObject","StyledSpan","span","WinnerTrophy_templateObject2","WinnerTrophy","Fragment","WinnerTrophy_StyledImg","trophyLogo","Board","box","e","_this$props","togglePlayer","concat","find","chooseBox","classList","add","toConsumableArray","renderBoxes","boxes","map","index","Board_SingleBox_SingleBox","key","Array","keys","_this$props2","renderedBoxes","StyledBoardContainer","components_Status_Status","components_WinnerTrophy_WinnerTrophy","StyledBoard","Board_templateObject","Board_templateObject2","StyledDiv","Game_templateObject","_useState","useState","_useState2","setCurrentPlayer","location","Board_Board","Routes","react_router_dom","globalStyles","react_router","exact","path","component","Game","App","routes","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oMCAzBC,EAAA,CACbC,KAAM,IACNC,KAAM,uBCFKC,EAAY,8aCGzB,IAYeC,EAZKC,YAAHC,IDDU,oBACD,4PEE1B,IAMMC,EAAYC,IAAOC,IAAVC,IFVsB,2BEiBtBC,EAbF,WACX,OACEC,EAAAC,EAAAC,cAACP,EAAD,CAAWQ,IAAKC,IAAMC,IAAI,2/BCAxBC,6MACJC,MAAQ,CACNC,YAAa,GACbC,aAAc,MAGhBC,aAAe,SAACC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MAErBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EAAOC,OAIZK,aAAe,SAACR,GAAU,IAAAS,EACcL,EAAKR,MAAnCC,EADgBY,EAChBZ,YAAaC,EADGW,EACHX,aAErBE,EAAMU,iBACNN,EAAKO,MAAMC,QAAQC,KAAK,CACtBC,SAAUrC,EAAWE,KACrBiB,MAAO,CACLC,cACAC,2FAMJ,OACET,EAAAC,EAAAC,cAACwB,EAAD,KACE1B,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAYC,SAAUC,KAAKX,cACzBnB,EAAAC,EAAAC,cAAC6B,EAAD,oCAEE/B,EAAAC,EAAAC,cAAC8B,EAAD,CACEC,KAAK,OACLpB,KAAK,cACLqB,SAAUJ,KAAKpB,aACfyB,UAAQ,KAGZnC,EAAAC,EAAAC,cAAC6B,EAAD,kCAEE/B,EAAAC,EAAAC,cAAC8B,EAAD,CACEC,KAAK,OACLpB,KAAK,eACLqB,SAAUJ,KAAKpB,aACfyB,UAAQ,KAGZnC,EAAAC,EAAAC,cAACkC,EAAD,CAAcH,KAAK,SAASnB,MAAM,UAAlC,oBApDauB,IAAMC,WA2DvBZ,EAAsB9B,IAAO2C,IAAVC,KAQnBZ,EAAahC,IAAO6C,KAAVC,IHzEqB,2BGmF/BX,EAAcnC,IAAO+C,MAAVC,KAOXZ,EAAcpC,IAAOiD,MAAVC,IAMDvD,GAGV6C,EAAexC,IAAOmD,OAAVC,IAIFzD,EHtGW,WG8GZ0D,cAAW3C,GC3GX4C,EAFF,kBAAMlD,EAAAC,EAAAC,cAACiD,EAAD,qzBCEnB,IAQMf,EAAexC,IAAOmD,OAAVK,IAiBWC,IAQAC,KASdC,EA1CG,SAAAjC,GAAS,IACjBkC,EAAyBlC,EAAzBkC,cAAe1C,EAAUQ,EAAVR,MAEvB,OACEd,EAAAC,EAAAC,cAACuD,EAAD,CAAc3C,MAAOA,EAAO4C,QAASF,KCE1BG,EAXI,CACjB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,ICKMC,EAXK,SAACC,EAASC,GAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAIC,EAAYC,OAAQF,IAAK,KAAAG,EAAAjD,OAAAkD,EAAA,EAAAlD,CACzB+C,EAAYD,GADa,GACpC9D,EADoCiE,EAAA,GACjCE,EADiCF,EAAA,GAC9BG,EAD8BH,EAAA,GAGvCL,GAAWA,EAAQI,QAAU,GAAKJ,EAAQS,SAASrE,IAAM4D,EAAQS,SAASrE,KAAO4D,EAAQS,SAASF,IAAMP,EAAQS,SAASrE,KAAO4D,EAAQS,SAASD,IACnJP,IAGJ,OAAO,0TCNT,IAQMS,EAAe3E,IAAO2C,IAAViC,IRTQ,UADC,WQ0BZC,EAxBA,SAAAC,GAA6C,IAA1CC,EAA0CD,EAA1CC,cAAeC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,SAC3C,OACE7E,EAAAC,EAAAC,cAACqE,EAAD,CAAcO,UAAWH,GAAiBE,EAAW,UAAY,MAAjE,SACSD,EADT,IACsBC,GAAY,q3BCFtC,IASMlF,GAAYC,IAAOC,IAAVkF,MA4BTC,GAAapF,IAAOqF,KAAVC,KAKA3F,GAGD4F,GA7CM,SAAAT,GAAoB,IAAjBE,EAAiBF,EAAjBE,WACtB,OACE5E,EAAAC,EAAAC,cAACF,EAAAC,EAAMmF,SAAP,KACEpF,EAAAC,EAAAC,cAACmF,GAAD,CAAWlF,IAAKmF,KAAYjF,IAAI,2BAChCL,EAAAC,EAAAC,cAAC8E,GAAD,uBAAmBhF,EAAAC,EAAAC,cAAA,WAAO0E,kaCFXW,8MACnBhF,MAAQ,CACNC,YAAa,GACbC,aAAc,GACdoE,UAAU,KAGZrB,cAAgB,SAACgC,EAAKC,GAAM,IAAAC,EACc3E,EAAKO,MAArCqE,EADkBD,EAClBC,aAAchB,EADIe,EACJf,cACdE,EAAa9D,EAAKR,MAAlBsE,SAIR,GAA4B,qBAHT9D,EAAKR,MAAMC,YAAYoF,OAAO7E,EAAKR,MAAME,cAC5BoF,KAAK,SAAAC,GAAS,OAAIA,IAAcN,KAErBX,EACzC,OAAO,EAGTY,EAAE7E,OAAOmF,UAAUC,IAAIrB,GACvB5D,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACG0D,EADH,GAAAiB,OAAA3E,OAAAgF,EAAA,EAAAhF,CACuBF,EAAKR,MAAMoE,IADlC,CACkDa,KAC/C,kBAAM5B,EAAY7C,EAAKR,MAAMoE,GAAgB5D,EAAK+C,kBACrD6B,OAGF7B,eAAiB,WAAM,IACb6B,EAAiB5E,EAAKO,MAAtBqE,aACR5E,EAAKC,SAAS,CAAC6D,UAAU,IAEzBc,OAGFO,YAAc,SAACC,GAKb,OAJsBA,EAAMC,IAAI,SAACZ,EAAKa,GAAN,OAC9BrG,EAAAC,EAAAC,cAACoG,EAAD,CAAWC,IAAKf,EAAKhC,cAAe,SAACiC,GAAD,OAAO1E,EAAKyC,cAAcgC,EAAKC,iFAOrE,IAAMU,EAAKlF,OAAAgF,EAAA,EAAAhF,CAAOuF,MAAM,GAAGC,QADpBC,EAE+B5E,KAAKR,MAAnCqD,EAFD+B,EAEC/B,cAAeC,EAFhB8B,EAEgB9B,WACfC,EAAa/C,KAAKvB,MAAlBsE,SACF8B,EAAgB7E,KAAKoE,YAAYC,GAEvC,OACEnG,EAAAC,EAAAC,cAAC0G,GAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAD,CAAQlC,cAAeA,EAAeC,WAAYA,EAAYC,SAAUA,IACvEA,GACC7E,EAAAC,EAAAC,cAAC4G,GAAD,CAAclC,WAAYA,IAE5B5E,EAAAC,EAAAC,cAAC6G,GAAD,KACGJ,WApDwBtE,IAAMC,WA2DnCsE,GAAuBhH,IAAO2C,IAAVyE,MAOpBD,GAAcnH,IAAO2C,IAAV0E,sGCnEjB,IAoBMC,GAAYtH,IAAO2C,IAAV4E,MAIAlE,eAxBF,SAAC3B,GAAU,IAAA8F,EACkBC,mBAAS,eAD3BC,EAAArG,OAAAkD,EAAA,EAAAlD,CAAAmG,EAAA,GACjBzC,EADiB2C,EAAA,GACFC,EADED,EAAA,GAOtB,OAAKhG,EAAMkG,SAASjH,MAOlBP,EAAAC,EAAAC,cAACgH,GAAD,KACElH,EAAAC,EAAAC,cAACuH,GAAD,CAAO9B,aAZX,WACE4B,EAAmC,gBAAlB5C,EAAkC,eAAiB,gBAW/BA,cAAeA,EAAeC,WAAYtD,EAAMkG,SAASjH,MAAMoE,OAPpGrD,EAAMC,QAAQC,KAAKpC,EAAWC,MAEvB,QCCIqI,GAVA,WACb,OACE1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAAC0H,EAAD,MACE5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM3I,EAAWC,KAAM2I,UAAW9E,IAC/ClD,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM3I,EAAWE,KAAM0I,UAAWC,OCPxCC,GAFH,kBAAMlI,EAAAC,EAAAC,cAACiI,GAAD,OCSEC,QACW,cAA7BC,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAASC,MACvB,2DCZNC,IAASC,OAAOzI,EAAAC,EAAAC,cAACwI,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.00ce977a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fbcd6f0d.png\";","module.exports = __webpack_public_path__ + \"static/media/x-icon.1d472015.png\";","module.exports = __webpack_public_path__ + \"static/media/o-icon.b92631f7.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy-icon.7f72d795.png\";","export default {\n  home: '/',\n  game: '/game',\n};\n","export const boxShadow = '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)';\nexport const transparentBackground = 'rgba(255, 255, 255, .1)';\nexport const generalBlue = '#2989d8';\nexport const generalRed = '#e83737';\n","import { createGlobalStyle } from 'styled-components';\nimport { generalBlue, generalRed } from './variables';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n\n  body {\n    overflow-y: scroll;\n    background: linear-gradient(to bottom, ${generalBlue} 0%,${generalBlue} 0%,${generalRed} 100%,${generalRed} 100%);\n    background-repeat: no-repeat;\n    height: 100vh;\n    font-family: 'Montserrat', sans-serif;\n  }\n`;\n\nexport default GlobalStyle;","import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../../lib/images/logo.png';\nimport { transparentBackground } from '../../lib/styles/variables';\n\nconst Logo = () => {\n  return (\n    <StyledImg src={logo} alt=\"Logo\" />\n  );\n};\n\nconst StyledImg = styled.img`\n  max-height: 300px;\n  background-color: ${transparentBackground};\n  border-radius: 20%;\n  margin-bottom: 20px;\n`;\n\nexport default Logo;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport routePaths from '../../lib/constans/routePaths';\nimport styled from 'styled-components';\nimport Logo from '../Logo';\nimport { transparentBackground, generalBlue, boxShadow } from '../../lib/styles/variables';\n\nclass FormName extends React.Component {\n  state = {\n    firstPlayer: '',\n    secondPlayer: '',\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    const { firstPlayer, secondPlayer } = this.state;\n\n    event.preventDefault();\n    this.props.history.push({\n      pathname: routePaths.game,\n      state: {\n        firstPlayer,\n        secondPlayer,\n      },\n    });\n  }\n\n  render(){\n    return (\n      <StyledFormContainer>\n        <Logo />\n        <StyledForm onSubmit={this.handleSubmit}>\n          <StyledLabel>\n            ImiÄ™ pierwszego gracza:\n            <StyledInput\n              type=\"text\"\n              name=\"firstPlayer\"\n              onChange={this.handleChange}\n              required\n            />\n          </StyledLabel>\n          <StyledLabel>\n            ImiÄ™ drugiego gracza:\n            <StyledInput\n              type=\"text\"\n              name=\"secondPlayer\"\n              onChange={this.handleChange}\n              required\n            />\n          </StyledLabel>\n          <StyledButton type=\"submit\" value=\"Submit\">Zagraj!</StyledButton>\n        </StyledForm>\n      </StyledFormContainer>\n    );\n  }\n};\n\nconst StyledFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  background-color: ${transparentBackground};\n  box-sizing: border-box;\n  border-radius: 40px;\n  padding: 2em;\n`;\n\nconst StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  color: white;\n`;\n\nconst StyledInput = styled.input`\n  display: flex;\n  margin: 10px 0;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  box-shadow: ${boxShadow};\n`;\n\nconst StyledButton = styled.button`\n  cursor: pointer;\n  margin: 10px 0;\n  border: none;\n  box-shadow: ${boxShadow};\n  border-radius: 3px;\n  padding: 10px;\n  background-color: ${generalBlue};\n  color: white;\n  font-size: 1em;\n`;\n\nexport default withRouter(FormName);\n","import React from 'react';\nimport FormName from '../../components/FormName';\n\nconst Home = () => <FormName />;\n\nexport default Home;\n","import React from 'react';\nimport styled from 'styled-components';\nimport xIcon from '../../../lib/images/x-icon.png';\nimport oIcon from '../../../lib/images/o-icon.png';\n\nconst SingleBox = props => {\n  const { handleOnClick, value } = props;\n\n  return (\n    <StyledButton value={value} onClick={handleOnClick} />\n  );\n};\n\nconst StyledButton = styled.button`\n  display: flex;\n  justify-content: center;\n  background-color: white;\n  align-items: center;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n  font-size: 3em;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  &:focus {\n    outline: none;\n  }\n  &.firstPlayer {\n    background-image: url('${xIcon}');\n    background-size: 100%;\n    &:hover {\n      background-color: white;\n      cursor: default;\n    }\n  }\n  &.secondPlayer {\n    background-image: url('${oIcon}');\n    background-size: 100%;\n    &:hover {\n      background-color: white;\n      cursor: default;\n    }\n  }\n`;\n\nexport default SingleBox;","const winnerPath = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nexport default winnerPath;","import winnerPaths from '../constans/winnerPaths';\n\nconst checkWinner = (checked, handleIsWinner) => {\n  for (let i = 0; i < winnerPaths.length; i++) {\n    const [a, b, c] = winnerPaths[i];\n\n    if (checked && checked.length >= 3 && checked.includes(a) && checked.includes(a) === checked.includes(b) && checked.includes(a) === checked.includes(c)) {\n      handleIsWinner();\n    }\n  }\n  return null;\n}\n\nexport default checkWinner;","import React from 'react';\nimport styled from 'styled-components';\nimport { generalBlue, generalRed } from './../../lib/styles/variables';\n\nconst Status = ({ currentPlayer, playerName, isWinner }) => {\n  return (\n    <StyledStatus className={currentPlayer + (isWinner ? ' winner' : ' ')}>\n      Gracz {playerName} {isWinner && 'WygraÅ‚!'}\n    </StyledStatus>\n  );\n}\n\nconst StyledStatus = styled.div`\n  padding: 10px 15px;\n  font-size: 2em;\n  color: white;\n  margin-bottom: 15px;\n  &.firstPlayer {\n    background-color: ${generalRed};\n  }\n  &.secondPlayer {\n    background-color: ${generalBlue};\n  }\n  &.winner {\n    background-color: green;\n  }\n`;\n\nexport default Status;\n","import React from 'react';\nimport styled from 'styled-components';\nimport trophyLogo from '../../lib/images/trophy-icon.png';\nimport { boxShadow } from '../../lib/styles/variables';\n\nconst WinnerTrophy = ({ playerName }) => {\n  return (\n    <React.Fragment>\n      <StyledImg src={trophyLogo} alt=\"Trofeum zwyciÄ™zcy\" />\n      <StyledSpan>WygraÅ‚Â <br />{playerName}</StyledSpan>\n    </React.Fragment>\n  );\n};\n\nconst StyledImg = styled.img`\n  position: absolute;\n  max-height: 300px;\n  border-radius: 20%;\n  margin-bottom: 20px;\n  -webkit-animation-name: example; \n  -webkit-animation-duration: 2s;\n  animation-name: bounce;\n  animation-duration: 2s;\n  animation-iteration-count: infinite;\n  -webkit-animation-timing-function: linear;\n\n  @keyframes bounce {\n    0%   {\n      transform: rotate(0deg) scale(1, 1);\n    }\n    25%  {\n      transform: rotate(20deg) scale(1.2, 1.2);\n    }\n    50%  {\n      transform: rotate(0deg) scale(1, 1);\n    }\n    75%  {\n      transform: rotate(-20deg) scale(1.2, 1.2);\n    }\n  }\n`;\n\nconst StyledSpan = styled.span`\n  position: absolute;\n  background: white;\n  padding: 10px 15px;\n  font-size: 2em;\n  box-shadow: ${boxShadow};\n`;\n\nexport default WinnerTrophy;","import React from 'react';\nimport SingleBox from './SingleBox';\nimport styled from 'styled-components';\nimport checkWinner from '../../lib/utils/checkWinner';\nimport Status from '../../components/Status';\nimport WinnerTrophy from '../../components/WinnerTrophy';\n\nexport default class Board extends React.Component {\n  state = {\n    firstPlayer: [],\n    secondPlayer: [],\n    isWinner: false,\n  }\n\n  handleOnClick = (box, e) => {\n    const { togglePlayer, currentPlayer } = this.props;\n    const { isWinner } = this.state;\n    const choosedBox = this.state.firstPlayer.concat(this.state.secondPlayer);\n    const isCheckedBox = choosedBox.find(chooseBox => chooseBox === box);\n    \n    if (typeof isCheckedBox !== 'undefined' || isWinner) {\n      return false;\n    }\n\n    e.target.classList.add(currentPlayer);\n    this.setState({\n      [currentPlayer]: [...this.state[currentPlayer], box]\n    }, () => checkWinner(this.state[currentPlayer], this.handleIsWinner));\n    togglePlayer();\n  }\n\n  handleIsWinner = () => {\n    const { togglePlayer } = this.props;\n    this.setState({isWinner: true});\n\n    togglePlayer();\n  }\n\n  renderBoxes = (boxes) => {\n    const renderedBoxes = boxes.map((box, index) => (\n      <SingleBox key={box} handleOnClick={(e) => this.handleOnClick(box, e)}></SingleBox>\n    ));\n\n    return renderedBoxes;\n  }\n\n  render() {\n    const boxes = [...Array(9).keys()];\n    const { currentPlayer, playerName } = this.props;\n    const { isWinner } = this.state;\n    const renderedBoxes = this.renderBoxes(boxes);\n\n    return (\n      <StyledBoardContainer>\n        <Status currentPlayer={currentPlayer} playerName={playerName} isWinner={isWinner} />\n        {isWinner &&\n          <WinnerTrophy playerName={playerName} />\n        }\n        <StyledBoard>\n          {renderedBoxes}\n        </StyledBoard>\n      </StyledBoardContainer>\n    )\n  };\n}\n\nconst StyledBoardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\nconst StyledBoard = styled.div`\n  display: inline-grid;\n  grid-template-rows: 100px 100px 100px;\n  grid-template-columns: 100px 100px 100px;\n  grid-gap: 3px;\n  padding: 15px;\n`;\n","import React, { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Board from '../../components/Board';\nimport routePaths from '../../lib/constans/routePaths';\n\nconst Game = (props) => {\n  let [currentPlayer, setCurrentPlayer] = useState('firstPlayer');\n\n  function togglePlayer() {\n    setCurrentPlayer(currentPlayer === 'firstPlayer' ? 'secondPlayer' : 'firstPlayer');\n  }\n\n  if (!props.location.state) {\n    props.history.push(routePaths.home);\n\n    return null;\n  };\n\n  return (\n    <StyledDiv>\n      <Board togglePlayer={togglePlayer} currentPlayer={currentPlayer} playerName={props.location.state[currentPlayer]} />\n    </StyledDiv>\n  );\n}\n\nconst StyledDiv = styled.div`\n  text-align: center;\n`;\n\nexport default withRouter(Game);\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport routePaths from '../lib/constans/routePaths';\nimport GlobalStyle from '../lib/styles/globalStyles';\nimport Home from './Home';\nimport Game from './Game';\n\nconst Routes = () => {\n  return (\n    <Router>\n      <GlobalStyle />\n        <Route exact path={routePaths.home} component={Home} />\n        <Route exact path={routePaths.game} component={Game} />\n    </Router>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './pages/routes';\n\nconst App = () => <Routes />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './lib/styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}